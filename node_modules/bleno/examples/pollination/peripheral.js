const util = require('util');

//
// Require bleno peripheral library.
// https://github.com/sandeepmistry/bleno
//
const bleno = require('../..');

//
// Pizza
// * has crust
// * has toppings
// * can be baked
//
const polling = require('./polling');

//
// The BLE Pizza Service!
//
const PollingService = require('./polling-service');

//
// A name to advertise our Polling Service.
//
const name = 'Raspbian Pollination';
const pollingService = new PollingService(new polling.Pizza());


// //Mongo Connection
// const MongoClient = require('mongodb').MongoClient
// // default Mongo connection string
// const mongoHost = '127.0.0.1';
// const userName = ''
// const userPassword = ''
// const mongoPort = 27017
// const dbName = 'test_mongo_schema_creation'
// const collectionName = 'questions'

// // fetch questions from DB
// // MongoClient.connect(`mongodb://${userName}:${userPassword}@${mongoHost}:${mongoPort}/`
// MongoClient.connect(`mongodb://${mongoHost}:${mongoPort}/`
// , function (err, db) {
//     if (err) throw err;
//     var dbo = db.db(`${dbName}`);
//     dbo.collection(collectionName).find({}).toArray(function(err, result) {
//       if (err) throw err;
//       console.log(result);
//       db.close();
//     });
// });

const XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;
const xhr = new XMLHttpRequest();

let loadQuestionApi = 'http://localhost:3000/getQuestions'
let questions = []

let getQuestionPromise = new Promise(async function (resolve, reject) {
  let xhttp = new XMLHttpRequest();
  let response = ''

  xhttp.open("GET", loadQuestionApi, true);
  xhttp.send();
  xhttp.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200) {

          response = this.responseText;
          resolve(response)
      }
      // console.log(response)
  }
})
getQuestionPromise.then(question => {
  questions = question
  console.log(question)
  module.exports = {
    questions
  }
})

//
// Wait until the BLE radio powers on before attempting to advertise.
// If you don't have a BLE radio, then it will never power on!
//
console.log("entered");
bleno.on('stateChange', function(state) {
  if (state === 'poweredOn') {
    //
    // We will also advertise the service ID in the advertising packet,
    // so it's easier to find.
    //
    bleno.startAdvertising(name, [pollingService.uuid], function(err) {
      if (err) {
        console.log(err);
      }
    });
  }
  else {
    bleno.stopAdvertising();
  }
});

bleno.on('advertisingStart', function(err) {
  if (!err) {
    console.log('advertising...');
    //
    // Once we are advertising, it's time to set up our services,
    // along with our characteristics.
    //
    bleno.setServices([
      pollingService
    ]);
  }
});
